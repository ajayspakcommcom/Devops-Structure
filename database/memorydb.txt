
Amazon MemoryDB – Key Pointers

    1. What is MemoryDB?
        . A fully managed, Redis-compatible, in-memory database service.
        . Unlike ElastiCache (cache-focused), MemoryDB is a primary database with durability + HA.
        . Data is stored in memory for microsecond latency but also persisted to a multi-AZ transactional log for durability.

    2. Why Use It?
        . When you need ultra-fast performance like Redis but also want it as your system of record (not just a cache).
        . Combines:
            . Redis API compatibility.
            . In-memory speed.
            . Database-level durability + failover.

    3. Core Features
        . 100% Redis API compatibility → works with existing Redis apps/tools.
        . Multi-AZ durability → data replicated across 3 AZs.
        . Persistence → data written to distributed transactional log.
        . Scalability → sharding + replicas.
        . Security: VPC isolation, encryption, IAM authentication.

    4. Comparison with ElastiCache (Redis)
        | Feature          | ElastiCache (Redis)                                        | MemoryDB                      |
        | ---------------- | ---------------------------------------------------------- | ----------------------------- |
        | **Use Case**     | Caching layer                                              | Primary DB + caching          |
        | **Durability**   | Optional (snapshots, AOF), not designed as source of truth | Always durable (multi-AZ log) |
        | **Availability** | Multi-AZ with replicas                                     | Multi-AZ + durable storage    |
        | **Performance**  | Microsecond latency                                        | Same (Redis speed)            |
        | **Persistence**  | Limited                                                    | Full DB durability            |
        | **Cost**         | Lower                                                      | Higher (durability overhead)  |

    5. Security
        . Encrypted at rest (KMS) and in transit (TLS).
        . IAM authentication + Redis AUTH.
        . Runs inside VPC.

    6. Cost Model
        . Pay for:
           . Node hours (by instance type).
           . Data storage (transaction log, backups).
           . Data transfer.
        . More expensive than ElastiCache since it adds persistence & durability.

    7. Industry Standards
        . Use ElastiCache when:
            . You just need a cache to offload RDS/DynamoDB.
        . Use MemoryDB when:
            . You need Redis performance + durability.
            . Want Redis to act as your system of record.
            . Best Practices:
                . Deploy Multi-AZ clusters for HA.
                . Use sharding for horizontal scaling.
                . Monitor latency, replica lag, memory usage with CloudWatch.
                . Encrypt with KMS for compliance.

    8. Typical Corporate Use Cases
        . Financial services → ultra-fast transaction systems (durable + consistent).
        . E-commerce → product catalogs, session stores (primary DB + cache).
        . Gaming → leaderboards, player state (durable + low latency).
        . IoT → real-time device states with persistence.
        . AI/ML → feature stores needing fast + durable retrieval.

    9. Summary
        . Amazon MemoryDB = Redis-compatible, durable in-memory database.
            . ElastiCache = cache-first.
            . MemoryDB = database-first (Redis as primary store).
            . Industry best practices → use ElastiCache for caching, MemoryDB when Redis needs to be your durable DB.

